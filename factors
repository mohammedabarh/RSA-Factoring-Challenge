#!/usr/bin/env python3
"""Module for efficient number factorization"""
from sys import argv
from math import isqrt


def read_numbers_from_file(file_path):
    """
    Read numbers from a file and return them as a list of integers
    """
    with open(file_path, "r", encoding="utf-8") as input_file:
        return [int(line.strip()) for line in input_file]


def compute_factors(target_num):
    """
    Compute factors of a given number efficiently
    """
    for potential_factor in range(2, isqrt(target_num) + 1):
        if target_num % potential_factor == 0:
            return potential_factor, target_num // potential_factor
    return target_num, 1


def process_number_list(number_list):
    """
    Process a list of numbers and print their factors
    """
    for current_num in number_list:
        small_factor, large_factor = compute_factors(current_num)
        print(f"{current_num}={large_factor}*{small_factor}")


if __name__ == "__main__":
    if len(argv) != 2:
        print(f"Usage: {argv[0]} <file>")
        exit(1)
    process_number_list(read_numbers_from_file(argv[1]))
